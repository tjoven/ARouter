if(isLibrary) {                                   //COMMON
    apply plugin: 'com.android.library'           //COMMON
}else {                                           //COMMON
    apply plugin: 'com.android.application'       //COMMON
}
android {
    compileSdkVersion  baseConfig.compileSdkVersion
    buildToolsVersion  baseConfig.buildToolsVersion


    defaultConfig {
        if(!isLibrary) {
            applicationId "com.example.member"
        }

        minSdkVersion baseConfig.minSdkVersion
        targetSdkVersion baseConfig.targetSdkVersion
        versionCode baseConfig.versionCode
        versionName baseConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main{
            if(isLibrary){

                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies.publicImplementation

    annotationProcessor project(path: ':compiler')

    rootProject.ext.dependencies.base.each{
        implementation project(path:it)
    }
}
